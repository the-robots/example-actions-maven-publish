name: Publish Maven Package
on:
  push:
  workflow_dispatch:

env:
  GROUP_ID: com.octokat.app
  ARTIFACT_ID: octokat-app
  VERSION: 1.0-SNAPSHOT
  CLASS_NAME: PublishApp
  SETTINGS_FILE: settings.xml

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Add settings.xml
        run: |
          echo '<settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
                                http://maven.apache.org/xsd/settings-1.0.0.xsd">
            <activeProfiles>
              <activeProfile>github</activeProfile>
            </activeProfiles>
            <profiles>
              <profile>
                <id>github</id>
                <repositories>
                  <repository>
                    <id>github</id>
                    <url>https://maven.pkg.github.com/${{ github.repository }}</url>
                  </repository>
                </repositories>
              </profile>
            </profiles>
            <servers>
              <server>
                <id>github</id>
                <username>token</username>
                <password>${env.GITHUB_TOKEN}</password>
              </server>
            </servers>
          </settings>' > ${{ env.SETTINGS_FILE }}

      - name: Add simple pom.xml
        run: |
          cat > pom.xml << EOM
          <?xml version="1.0" encoding="UTF-8"?>
          <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
            <modelVersion>4.0.0</modelVersion>
            <groupId>${{ env.GROUP_ID }}</groupId>
            <artifactId>${{ env.ARTIFACT_ID }}</artifactId>
            <version>${{ env.VERSION }}</version>
          </project>
          EOM

      - name: Add ${{ env.CLASS_NAME }}.java file
        run: |
          SOURCE_DIR=src/main/java/$(echo ${{ env.GROUP_ID }} | tr . /)
          mkdir -p $SOURCE_DIR
          SOURCE_PATH=$SOURCE_DIR/${{ env.CLASS_NAME }}.java
          cat <<- END > $SOURCE_PATH
          package ${{ env.GROUP_ID }};
          public class ${{ env.CLASS_NAME }}
          {
              public static void main( String[] args )
              {
                  System.out.println( "Hello from ${{ github.repository }}, commit ${{ github.sha }}, run number ${{ github.run_number }}!" );
              }
          }
          END

      - name: Build package
        run: mvn package --no-transfer-progress

      - name: Run package
        run: java -cp target/${{ env.ARTIFACT_ID }}-${{ env.VERSION }}.jar ${{ env.GROUP_ID }}.${{ env.CLASS_NAME }}

      - name: Deploy package
        run: mvn deploy --settings ${{ env.SETTINGS_FILE }} -DaltDeploymentRepository=github::default::https://maven.pkg.github.com/${{ github.repository }} --no-transfer-progress
        env:
          GITHUB_TOKEN: ${{ github.token }} # GITHUB_TOKEN is the default env for the password

      - name: Trigger maven-install workflow
        if: ${{ env.GITHUB_TOKEN != null }}
        run: gh api repos/${{ github.repository_owner }}/maven-install/dispatches <<< '{"event_type":"build"}' --input -
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
